{% doc %}
  Scrolling Icons Banner Component

  Renders a horizontal scrolling banner with numbered PNG icons.
  Uses CSS animations for smooth infinite scrolling effect.

  @param {string} background_color - Background color (default: '#ffffff')
  @param {string} section_title - Section heading text (default: '')
  @param {number} scroll_speed - Animation duration in seconds (default: 30)
  @param {boolean} show_title - Show section title (default: false)
  @param {string} icon_size - Icon size: 'small', 'medium', 'large' (default: 'medium')

  @example
  {% render 'scrolling-icons-banner' %}
  
  @example
  {% render 'scrolling-icons-banner',
       background_color: '#f5f5f5',
       section_title: 'Our Partners',
       show_title: true,
       icon_size: 'large',
       scroll_speed: 20
    %}
{% enddoc %}

{% liquid
  # Parameter validation and defaults
  assign background_color = background_color | default: '#ffffff'
  assign section_title = section_title | default: ''
  assign scroll_speed = scroll_speed | default: 8
  assign show_title = show_title | default: false
  assign icon_size = icon_size | default: 'medium'

  # Icon size classes
  case icon_size
    when 'small'
      assign size_class = 'icon-small'
    when 'large'
      assign size_class = 'icon-large'
    else
      assign size_class = 'icon-medium'
  endcase

  # Manual icon specification - no for loop needed
%}


<div class="scrolling-icons-banner" style="background-color: {{ background_color }};">
  {% if show_title and section_title != blank %}
    <div class="banner-header">
      <h2 class="banner-title">{{ section_title }}</h2>
    </div>
  {% endif %}

  <div class="scrolling-container" id="scrolling-container-{{ section.id }}">
    <div class="scrolling-track" id="scrolling-track-{{ section.id }}" style="animation-duration: {{ scroll_speed }}s;">
      <!-- Original set -->
      <div class="icon-set">
        <div class="icon-item {{ size_class }}">
          <img src="{{ '1-icons.jpg' | asset_url }}" alt="Icon" loading="lazy" height="100" width="auto">
        </div>
        <div class="icon-item {{ size_class }}">
          <img src="{{ '2-icons.jpg' | asset_url }}" alt="Icon" loading="lazy" height="100" width="auto">
        </div>
        <div class="icon-item {{ size_class }}">
          <img src="{{ '3-icons.jpg' | asset_url }}" alt="Icon" loading="lazy" height="100" width="auto">
        </div>
        <div class="icon-item {{ size_class }}">
          <img src="{{ '4-icons.jpg' | asset_url }}" alt="Icon" loading="lazy" height="100" width="auto">
        </div>
        <div class="icon-item {{ size_class }}">
          <img src="{{ '5-icons.jpg' | asset_url }}" alt="Icon" loading="lazy" height="100" width="auto">
        </div>
        <div class="icon-item {{ size_class }}">
          <img src="{{ '6-icons.jpg' | asset_url }}" alt="Icon" loading="lazy" height="100" width="auto">
        </div>
      </div>
      
      <!-- Duplicate set -->
      <div class="icon-set">
        <div class="icon-item {{ size_class }}">
          <img src="{{ '1-icons.jpg' | asset_url }}" alt="Icon" loading="lazy" height="100" width="auto">
        </div>
        <div class="icon-item {{ size_class }}">
          <img src="{{ '2-icons.jpg' | asset_url }}" alt="Icon" loading="lazy" height="100" width="auto">
        </div>
        <div class="icon-item {{ size_class }}">
          <img src="{{ '3-icons.jpg' | asset_url }}" alt="Icon" loading="lazy" height="100" width="auto">
        </div>
        <div class="icon-item {{ size_class }}">
          <img src="{{ '4-icons.jpg' | asset_url }}" alt="Icon" loading="lazy" height="100" width="auto">
        </div>
        <div class="icon-item {{ size_class }}">
          <img src="{{ '5-icons.jpg' | asset_url }}" alt="Icon" loading="lazy" height="100" width="auto">
        </div>
        <div class="icon-item {{ size_class }}">
          <img src="{{ '6-icons.jpg' | asset_url }}" alt="Icon" loading="lazy" height="100" width="auto">
        </div>
      </div>
    </div>
  </div>
</div>

<style>
.scrolling-icons-banner {
  overflow: hidden;
  position: relative;
  background: #000000;
  border-bottom: 4px solid;
  border-top: 4px solid;
  border-image: linear-gradient(90deg,rgba(255, 109, 4, 0.95), #dc200d) 1;
}

.banner-header {
  text-align: center;
  margin-bottom: 40px;
}

.banner-title {
  font-family: 'DIN Condensed', 'Arial Narrow', sans-serif;
  font-size: 3rem;
  font-weight: bold;
  text-transform: uppercase;
  color: #333;
  margin: 0;
}

.scrolling-container {
  width: 100%;
  overflow: hidden;
  position: relative;
  background: #000000;
}

.scrolling-track {
  display: flex;
  align-items: center;
  width: fit-content;
  animation: marquee linear infinite;
}

.icon-set {
  display: flex;
  align-items: center;
  flex-shrink: 0;
}

.icon-item {
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 20px 0;
}

.icon-item img {
  height: 100px;
  width: auto;
  object-fit: contain;
}

/* Icon sizes - all images use fixed 100px height with auto width */
.icon-small img,
.icon-medium img,
.icon-large img {
  height: 100px;
  width: auto;
}

/* Classic marquee animation */
@keyframes marquee {
  0% {
    transform: translateX(0%);
  }
  100% {
    transform: translateX(-50%);
  }
}

/* Continuous scrolling - never pause */
.scrolling-icons-banner .scrolling-track {
  animation-play-state: running;
}

/* Responsive design */
@media (max-width: 768px) {
  .icon-item {
    margin-right: 20px;
    padding: 15px;
  }
  
  .icon-small img,
  .icon-medium img,
  .icon-large img {
    height: 80px;
    width: auto;
  }
}

@media (max-width: 480px) {
  .scrolling-icons-banner {
    padding: 30px 0;
  }
  
  .banner-title {
    font-size: 1.5rem;
  }
  
  .icon-item {
    margin-right: 15px;
    padding: 10px;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const track = document.getElementById('scrolling-track-{{ section.id }}');
  const iconSets = track.querySelectorAll('.icon-set');
  
  if (iconSets.length >= 2) {
    // Measure the width of the first set after images load
    const firstSet = iconSets[0];
    
    // Wait for images to load before measuring
    const images = firstSet.querySelectorAll('img');
    let loadedImages = 0;
    
    function checkAllImagesLoaded() {
      loadedImages++;
      if (loadedImages === images.length) {
        // All images loaded, now measure and set precise animation
        const firstSetWidth = firstSet.getBoundingClientRect().width;
        
        // Create precise animation
        const keyframes = `
          @keyframes marquee-precise {
            0% { transform: translateX(0px); }
            100% { transform: translateX(-${firstSetWidth}px); }
          }
        `;
        
        // Inject the updated keyframes
        const style = document.createElement('style');
        style.textContent = keyframes;
        document.head.appendChild(style);
        
        // Apply the precise animation
        track.style.animation = 'marquee-precise {{ scroll_speed }}s linear infinite';
      }
    }
    
    // Listen for image load events
    images.forEach(img => {
      if (img.complete) {
        checkAllImagesLoaded();
      } else {
        img.addEventListener('load', checkAllImagesLoaded);
      }
    });
  }
});
</script>
